name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file ManagerXpressBack/pom.xml

    - name: Run Unit Tests
      working-directory: ManagerXpressBack
      run: mvn test
    - name: List Target Directory
      run: ls -R ManagerXpressBack/target
    - name: Code Quality Checks
      working-directory: ManagerXpressBack
      run: mvn verify

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Generate Code Coverage Report
      working-directory: ManagerXpressBack
      run: mvn jacoco:report -DdataFile=target/jacoco.exec

    - name: Build and analyze
      working-directory: ManagerXpressBack
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Godyrex_ManagerXpress

    - name: Build and Push Docker Image
      if: success()
      run: |
        cd ManagerXpressBack/
        docker build -t oussemaouakad/managerxpress:latest .
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push oussemaouakad/managerxpress:latest
